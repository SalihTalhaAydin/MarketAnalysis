name: Python Lint, Format, Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"] # Run on the latest supported version for formatting

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install the package in editable mode with development dependencies (includes black, isort)
        pip install -e .[dev]

    - name: Sort imports with isort
      run: |
        isort $(git ls-files '*.py')

    - name: Format code with black
      run: |
        black $(git ls-files '*.py')

    - name: Check for formatting changes
      id: check_changes
      run: |
        git diff --quiet || echo "changes_detected=true" >> $GITHUB_OUTPUT

    - name: Commit and push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git commit -am "Automated code formatting"
        git push

    - name: Analyse the code with pylint
      run: |
        pylint $(git ls-files '*.py')

    - name: Test with pytest
      run: |
        pytest
